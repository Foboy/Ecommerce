@using Nop.Core.Domain.Catalog
@model ProductListModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Catalog.Products.Manage").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
            @T("Admin.Catalog.Products.Manage")
        </div>
        <div class="options">
            <a href="@Url.Action("Create")" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.AddNew")</a>
            <a href="@Url.Action("DownloadCatalogAsPdf")" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Catalog.Products.List.DownloadPDF")</a>
            @*<a href="@Url.Action("ExportXmlAll")" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.ExportToXml.All")</a>
                <a  id="exportxml-selected" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.ExportToXml.Selected")</a>*@
            <a href="@Url.Action("ExportExcelAll")" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.ExportToExcel.All")</a>
            <a id="exportexcel-selected" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.ExportToExcel.Selected")</a>
            @if (!Model.IsLoggedInAsVendor)
            {
                //a vendor cannot import products
                <input type="button" id="importexcel" name="importexcel" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.ImportFromExcel")" />
            }
            <input type="button" id="delete-selected" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.Delete.Selected")" />
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $("a.product_search_speclink").click(function () {
                var me = $(this);
                me.siblings("a").removeClass("btn-primary").attr("selected", false);
                if (me.attr("selected")) {
                    me.removeClass("btn-primary").attr("selected", false);
                }
                else {
                    me.addClass("btn-primary").attr("selected", true);
                }
            })
        });
    </script>
    <table width="100%">
        @for (var i = 0; i < Model.Specs.Count; i++)
        {
            var spec = Model.Specs[i];
            <tr>
                <td class="adminTitle">
                    <label title="@(spec.Name)">@(spec.Name)</label>:
                </td>
                <td class="adminData">
                    @for (var j = 0; j < spec.Options.Count; j++)
                    {
                        var option = spec.Options[j];
                        if (j > 0)
                        {
                            <span>|</span>
                        }
                        <a href="javascript:void(0)" class="product_search_speclink" data-specid="@option.Value">@option.Text</a>
                    }
                </td>
            </tr>
        }
        <tr>
            <td class="adminTitle">
                <label title="价格区间">价格区间</label>:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchMinPrice)
                -
                @Html.EditorFor(model => model.SearchMaxPrice)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchProductName, new { htmlAttributes = new { @class = "form-control input-sm col-md-4", @placeholder = "商品名称" }, })
                <input type="button" id="search-products" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.Search")" />
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchIncludeSubCategories):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchIncludeSubCategories)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchStoreId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchStoreId", Model.AvailableStores)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchVendorId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchVendorId", Model.AvailableVendors)
            </td>
        </tr>
        @*<tr @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.SearchVendorId):
                </td>
                <td class="adminData">
                    @Html.DropDownList("SearchVendorId", Model.AvailableVendors)
                </td>
            </tr>*@
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchWarehouseId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchWarehouseId", Model.AvailableWarehouses)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchProductTypeId", Model.AvailableProductTypes)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <label title="价格区间">商品编码</label>:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.GoDirectlyToSku, new { htmlAttributes = new { @class = "form-control input-sm col-md-4", @placeholder = "商品编码" }, })
                <input type="submit" id="go-to-product-by-sku" name="go-to-product-by-sku" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.Go")" />
            </td>
        </tr>

    </table>
    <p>
    </p>
    <div id="product-list">
        <ul>
            <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                全部商品
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                VIP商品
            </li>
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                精品典藏
            </li>
        </ul>
        <div>
            @TabAllInfo()
        </div>
        <div>
            @TabVIPInfo()
        </div>
        <div>
            @TabBoutiqueInfo()
        </div>

    </div>
    <script>
        $(document).ready(function () {
            $("#product-list").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                },
                select: tabstrip_on_tab_select
            });
        });
    </script>

    <script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#search-products').click(function () {
                //search
                var grid = $('#products-allgrid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                grid.dataSource.read();
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-products").click();
                    return false;
                }
            });
            $("#@Html.FieldIdFor(model => model.GoDirectlyToSku)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#go-to-product-by-sku").click();
                    return false;
                }
            });

            //"Export Excel selected" button
            $('#exportexcel-selected').click(function (e) {
                e.preventDefault();
                //redirect to required URL
                setLocation('@(Url.Action("ExportExcelSelected", "Product"))?selectedIds=' + selectedIds.join(","));
                return false;
            });

            //"Export XML selected" button
            $('#exportxml-selected').click(function (e) {
                e.preventDefault();
                //redirect to required URL
                setLocation('@(Url.Action("ExportXmlSelected", "Product"))?selectedIds=' + selectedIds.join(","));
                return false;
            });
            //"Delete (selected)" button
            $('#delete-selected').click(function (e) {
                e.preventDefault();
                //redirect to required URL
                setLocation('@(Url.Action("DeleteSelected", "Product"))?selectedIds=' + selectedIds.join(","));
                return false;
            });


        });

        function additionalData() {
            var product_search_select_specids = [];
            $("a.product_search_speclink").each(function () {
                var me = $(this);
                if (me.attr("selected")) {
                    product_search_select_specids.push(me.attr("data-specid"));
                }
            });
            return {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                SearchCategoryId: $('#SearchCategoryId').val(),
                SearchIncludeSubCategories: $('#@Html.FieldIdFor(model => model.SearchIncludeSubCategories)').is(':checked'),
                SearchManufacturerId: $('#SearchManufacturerId').val(),
                SearchStoreId: $('#SearchStoreId').val(),
                SearchWarehouseId: $('#SearchWarehouseId').val(),
                SearchVendorId: $('#SearchVendorId').val(),
                SearchProductTypeId: $('#SearchProductTypeId').val(),
                SearchSpecIds: product_search_select_specids.join(","),
                SearchMinPrice: $('#@Html.FieldIdFor(model => model.SearchMinPrice)').val(),
                SearchMaxPrice: $('#@Html.FieldIdFor(model => model.SearchMaxPrice)').val(),
            };
        }

        //function onDataBound(e) {
        //    $('#products-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
        //        var currentId = $(this).val();
        //        var checked = jQuery.inArray(currentId, selectedIds);
        //        //set checked based on if current checkbox's value is in selectedIds.
        //        $(this).attr('checked', checked > -1);
        //    });

        //    updateMasterCheckbox();
        //}

        //function updateMasterCheckbox() {
        //    var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
        //    var numChkBoxesChecked = $('#products-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
        //    $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        //}
    </script>
}


@*import products form*@
<div id="importexcel-window" style="display:none;">
    @using (Html.BeginForm("ImportExcel", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <table style="text-align:left;">
            <tr>
                <td colspan="2">
                    <em>@T("Admin.Catalog.Products.List.ImportFromExcelTip")</em>
                </td>
            </tr>
            <tr>
                <td>
                    @T("Admin.Common.ExcelFile"):
                </td>
                <td>
                    <input type="file" id="importexcelfile" name="importexcelfile" />
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.ImportFromExcel")" />
                </td>
            </tr>
        </table>
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#importexcel").click(function (e) {
            e.preventDefault();
            var window = $("#importexcel-window");
            if (!window.data("kendoWindow")) {
                window.kendoWindow({
                    modal: true,
                    width: "400px",
                    title: "@T("Admin.Common.ImportFromCsv")",
                    actions: ["Close"]
                });
            }
            window.data('kendoWindow').center().open();
        });
    });
</script>

@helper  TabAllInfo()
{
    @Html.Partial("_ProductList.All", Model)
}
@helper TabVIPInfo()
{
    @Html.Partial("_ProductList.VIP", Model)
}
@helper TabBoutiqueInfo()
{
    @Html.Partial("_ProductList.Boutique", Model)
}