@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
}
@using Nop.Core.Domain.Orders;
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
        套餐商品管理
    </div>
    <div class="options">
        <a href="@Url.Action("List", "Product")" class="btn btn-sm btn-primary btn-flat ">@T("Admin.Common.AddNew")</a>
        <input type="button" id="delete-selected" class="btn btn-sm btn-primary btn-flat " value="@T("Admin.Common.Delete.Selected")" />
    </div>
</div>
<table class="adminContent">
    <tr>
        <td>
            <div id="products-grid"></div>

            <script>
    $(document).ready(function () {
        $("#products-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("PackageProductList", "ShoppingCart"))",
                                        type: "POST",
                                        dataType: "json"
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(gridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                numeric: false,
                                previousNext: false,
                                info: false
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                                {
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                },  
                                {
                                    field: "PictureThumbnailUrl",
                                    title: "@T("Admin.Catalog.Products.Fields.PictureThumbnailUrl")",
                                template: '<img src="#=PictureThumbnailUrl#" />',
                                    width: 200
                                },
                                {
                                field: "ProductName",
                                title: "@T("Admin.CurrentCarts.Product")",
                width:500,
                template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">#=ProductName#</a><br><strong>#=AttributeInfo#</strong>'
            }, {
                field: "UnitPrice",
                title: "@T("Admin.CurrentCarts.UnitPrice")",
                width:200
            },{
                field: "Store",
                title: "@T("Admin.CurrentCarts.Store")",
                width:200
            },{
                field: "UpdatedOn",
                title: "@T("Admin.CurrentCarts.UpdatedOn")",
                width: 200,
                type: "date",
                format: "{0:G}"
            }]
        });
    });
            </script>
        </td>
    </tr>
</table>
<script type="text/javascript">

    var selectedIds = [];

    $(document).ready(function () {

        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
        });

        //"Delete (selected)" button
        $('#delete-selected').click(function (e) {
            e.preventDefault();
            //redirect to required URL
            setLocation('@(Url.Action("DeleteSelectedPackage", "ShoppingCart"))?selectedIds=' + selectedIds.join(","));
            return false;
        });

        //wire up checkboxes.
        $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
    });


    function onDataBound(e) {
        $('#products-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            //set checked based on if current checkbox's value is in selectedIds.
            $(this).attr('checked', checked > -1);
        });

        updateMasterCheckbox();
    }

    function updateMasterCheckbox() {
        var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
        var numChkBoxesChecked = $('#products-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
</script>
  
