@model DiscountModel

@using Nop.Core.Domain.Discounts;
@using Nop.Web.Framework.UI;
@{
    Html.AddScriptParts("~/Scripts/jquery.tmpl.min.js");
}
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)



<div id="discount-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            套餐信息
        </li>
        @if (Model.Id > 0)
        {
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                @T("Admin.Promotions.Discounts.History")
            </li>
        }
    </ul>
    <div>
        @TabInfo()
    </div>
    @if (Model.Id > 0)
    {
        <div>
            @TabHistory()
        </div>
    }
</div>
<script>
    $(document).ready(function() {
        $("#discount-edit").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "discount-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}






@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
    {
        
        
    <script type="text/javascript">
            $(document).ready(function () {
                $("#@Html.FieldIdFor(model => model.DiscountTypeId)").change(toggleDiscountType);
                $("#@Html.FieldIdFor(model => model.UsePercentage)").click(toggleUsePercentage);
                $("#@Html.FieldIdFor(model => model.RequiresCouponCode)").click(toggleRequiresCouponCode);
                $("#@Html.FieldIdFor(model => model.DiscountLimitationId)").change(toggleLimitation);

                toggleDiscountType();
                toggleLimitation();
                toggleUsePercentage();
                toggleRequiresCouponCode();
            });
            
            function toggleDiscountType() {
                var selectedDiscountTypeId = $("#@Html.FieldIdFor(model => model.DiscountTypeId)").val();
                if (selectedDiscountTypeId == @(((int)DiscountType.AssignedToCategories).ToString())) {
                    $('#pnlAppliedToCategories').show();
                    $('#pnlAppliedToProducts').hide();
                }
                else if (selectedDiscountTypeId == @(((int)DiscountType.AssignedToSkus).ToString())) {
                    $('#pnlAppliedToCategories').hide();
                    $('#pnlAppliedToProducts').show();
                }
                else {
                    $('#pnlAppliedToCategories').hide();
                    $('#pnlAppliedToProducts').hide();
                }
            }

            function toggleLimitation() {
                var selectedDiscountLimitationId = $("#@Html.FieldIdFor(model => model.DiscountLimitationId)").val();
                if (selectedDiscountLimitationId == @(((int)DiscountLimitationType.NTimesOnly).ToString()) || selectedDiscountLimitationId == @(((int)DiscountLimitationType.NTimesPerCustomer).ToString())) {
                    //'N Times Only' or 'N Times Per Customer'
                    $('#pnlLimitationTimes').show();
                }
                else {
                    $('#pnlLimitationTimes').hide();
                }
            }

            function toggleUsePercentage() {
                if ($('#@Html.FieldIdFor(model => model.UsePercentage)').is(':checked')) {
                    $('#pnlDiscountPercentage').show();
                    $('#pnlDiscountAmount').hide();
                }
                else {
                    $('#pnlDiscountPercentage').hide();
                    $('#pnlDiscountAmount').show();
                }
            }

            function toggleRequiresCouponCode() {
                if ($('#@Html.FieldIdFor(model => model.RequiresCouponCode)').is(':checked')) {
                    $('#pnlCouponCode').show();
                }
                else {
                    $('#pnlCouponCode').hide();
                }
            }
            
    </script>
    
        
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Name):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </td>
        </tr>
        <tr style="display:none;">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiscountTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.DiscountTypeId, ((DiscountType)Model.DiscountTypeId).ToSelectList())
                @Html.ValidationMessageFor(model => model.DiscountTypeId)
            </td>
        </tr>
        <tr id="pnlAppliedToCategories">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AppliedToCategoryModels):
            </td>
            <td class="adminData">
                @if (Model.AppliedToCategoryModels.Count > 0)
                {
                    for (int i = 0; i < Model.AppliedToCategoryModels.Count; i++)
                    {
                        var categoryId = Model.AppliedToCategoryModels[i].CategoryId;
                        var categoryName = Model.AppliedToCategoryModels[i].Name;
                        <a href="@Url.Action("Edit", "Category", new { id = categoryId })">@categoryName</a>
                        if (i != Model.AppliedToCategoryModels.Count - 1)
                        {
                            <text>, </text>
                        }
                    }
                }
                else
                {
                    @T("Admin.Promotions.Discounts.Fields.AppliedToCategories.NoRecords")
                }
            </td>
        </tr>
        <tr id="pnlAppliedToProducts">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AppliedToProductModels):
            </td>
            <td class="adminData">
                @if (Model.AppliedToProductModels.Count > 0)
                {
                    for (int i = 0; i < Model.AppliedToProductModels.Count; i++)
                    {
                        var productId = Model.AppliedToProductModels[i].ProductId;
                        var productName = Model.AppliedToProductModels[i].ProductName;
                        <a href="@Url.Action("Edit", "Product", new { id = productId })">@productName</a>
                        if (i != Model.AppliedToProductModels.Count - 1)
                        {
                            <text>, </text>
                        }
                    }
                }
                else
                {
                    @T("Admin.Promotions.Discounts.Fields.AppliedToProducts.NoRecords")
                }
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.UsePercentage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.UsePercentage)
                @Html.ValidationMessageFor(model => model.UsePercentage)
            </td>
        </tr>
        <tr id="pnlDiscountAmount">
            <td class="adminTitle">
                <label for="DiscountAmount" title="套餐优惠金额">套餐优惠金额</label>:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DiscountAmount) [@Model.PrimaryStoreCurrencyCode]
                @Html.ValidationMessageFor(model => model.DiscountAmount)
            </td>
        </tr>
        <tr id="pnlDiscountPercentage">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiscountPercentage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DiscountPercentage)
                @Html.ValidationMessageFor(model => model.DiscountPercentage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StartDateUtc):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StartDateUtc)
                @Html.ValidationMessageFor(model => model.StartDateUtc)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.EndDateUtc):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.EndDateUtc)
                @Html.ValidationMessageFor(model => model.EndDateUtc)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.RequiresCouponCode):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.RequiresCouponCode)
                @Html.ValidationMessageFor(model => model.RequiresCouponCode)
            </td>
        </tr>
        <tr id="pnlCouponCode">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CouponCode):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CouponCode)
                @Html.ValidationMessageFor(model => model.CouponCode)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiscountLimitationId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.DiscountLimitationId, ((DiscountLimitationType)Model.DiscountLimitationId).ToSelectList())
                @Html.ValidationMessageFor(model => model.DiscountLimitationId)
            </td>
        </tr>
        <tr id="pnlLimitationTimes">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.LimitationTimes):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.LimitationTimes)
                @Html.ValidationMessageFor(model => model.LimitationTimes) @T("Admin.Promotions.Discounts.Fields.LimitationTimes.Times")
            </td>
        </tr>
    </table>

        if (Model.Id > 0)
        {
            <table class="adminContent">
                <tr>
                    <td>
                        <div id="products-grid"></div>

                        <script>
                            $(document).ready(function () {
                                $("#products-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("DiscountPackageProductList", "ShoppingCart", new { discountId=Model.Id }))",
                                                type: "POST",
                                                dataType: "json"
                                            },
                                            destroy: {
                                                url: "@Html.Raw(Url.Action("DiscountPackageProductDelete", "Discount"))",
                                            type: "POST",
                                            dataType: "json"
                                        }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id"
                                            }
                                        },
                                        requestEnd: function (e) {
                                            if (e.type == "update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        numeric: false,
                                        previousNext: false,
                                        info: false
                                    },
                                    editable: {
                                        confirmation: false,
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [
                                        {
                                            field: "PictureThumbnailUrl",
                                            title: "@T("Admin.Catalog.Products.Fields.PictureThumbnailUrl")",
                                            template: '<img src="#=PictureThumbnailUrl#" />',
                                            width: 200
                                        },
                                        {
                                            field: "ProductName",
                                            title: "@T("Admin.CurrentCarts.Product")",
                                            width:500,
                                            template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">#=ProductName#</a><br><strong>#=AttributeInfo#</strong>'
                                        }, {
                                            field: "UnitPrice",
                                            title: "@T("Admin.CurrentCarts.UnitPrice")",
                                            width:200
                                        }, {
                                            command: [{
                                                name: "destroy",
                                                text: "@T("Admin.Common.Delete")"
                                            }]}]
                                });
                            });
                        </script>
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <input type="submit" id="btnAddNewRelatedProduct" name="btnAddNewRelatedProduct" value="添加套餐商品" onclick="javascript:OpenWindow('@(Url.Action("PackageProductAddPopup", "Discount", new { discountId = Model.Id, btnId = "btnRefreshPackageProducts", formId = "packageproduct-form" }))    ', 800, 800, true); return false;" class="btn btn-sm btn-primary btn-flat " />
                        <input type="submit" id="btnRefreshPackageProducts" name="btnRefreshPackageProducts" style="display: none" />
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnRefreshPackageProducts').click(function () {
                                    //refresh grid
                                    var optionsGrid = $("#products-grid").data('kendoGrid');
                                    optionsGrid.dataSource.read();

                                    //return false to don't reload a page
                                    return false;
                                });
                            });
                        </script>
                    </td>
                </tr>
            </table>
        }
else
        { 
            <br />
        <h5>保存后添加套餐商品</h5>
        }

}
@helper TabHistory()
    {
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    <div id="usagehistory-grid"></div>

    <script>
        $(document).ready(function () {
            $("#usagehistory-grid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("UsageHistoryList", "Discount", new { discountId = Model.Id }))",
                            type: "POST",
                            dataType: "json"
                        },
                        destroy: {
                            url: "@Html.Raw(Url.Action("UsageHistoryDelete", "Discount"))",
                            type: "POST",
                            dataType: "json"
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors",
                        model: {
                            id: "Id",
                            fields: {
                                //do not implicitly specify all fields
                                //we do it only for fields which implicitly require it
                                //otherwise, they'll be formatted wrong way
                                CreatedOn: {type: "date" }
                            }
                        }
                    },
                    error: function(e) {
                        display_kendoui_grid_error(e);
                        // Cancel the changes
                        this.cancelChanges();
                    },
                    pageSize: @(gridPageSize),
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true
                },
                editable: {
                    confirmation: false,
                    mode: "inline"
                },
                scrollable: false,
                columns: [{
                    field: "OrderId",
                    title: "@T("Admin.Promotions.Discounts.History.Order")",
                    width: 200,
                    template: '<a href="@Url.Content("~/Admin/Order/Edit/")#=OrderId#">#=OrderId# - @T("Admin.Common.View")</a>'
                }, {
                    field: "CreatedOn",
                    title: "@T("Admin.Promotions.Discounts.History.CreatedOn")",
                    width: 200,
                    type: "date",
                    format: "{0:G}"
                }, {
                    command: {name: "destroy", text: "@T("Admin.Common.Delete")"},
                    title: "@T("Admin.Common.Delete")",
                    width: 100
                }]
            });
        });
    </script>
}